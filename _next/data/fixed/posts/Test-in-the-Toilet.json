{
  "pageProps": {
    "postData": {
      "title": "Testing in the Toilet",
      "markdownContentSource": "\n# Testing In The Toilet\n\nUna buena prueba unitaria debería exhibir otra serie de propiedades a parte de la de comprobar nuestro código para considerarse leíble y mantenible.\n\nEl código debe ser legible como documentación, que describa el código que se está testeando. Un test completo y breve contiene toda la información necesaria para entenderlo. Y otra propiedad es la resistencia y adaptabilidad, una vez escrito, un test resistente no necesita cambiar a no ser que el propósito de la clase que es testeada cambie.\n\n# Change detector Tests\n\nLas pruebas no detectan ningún defecto y el costo de mantenimiento agregado ralentiza el desarrollo.\n\n# Don t Put Logic in Tests\n\nAñadir lógica a un test, es aumentar la probabilidad de crear algún tipo de bug en el test, ya se hace que el test no funcione. \n\nCuando las pruebas necesitan su propia lógica, dicha lógica a menudo debe moverse fuera de los cuerpos de prueba hacia las utilidades y funciones auxiliares.\n\nDado que estos ayudantes pueden ser bastante complejos, generalmente es una buena idea que cualquier utilidad de prueba no trivial, a su vez tenga sus propias pruebas.\n\n# Effective testing\n\nExisten 3 cualidades que hay que tratar de maximizar a la hora de diseñar pruebas para nuestro código.\n\nFidelidad: una prueba de alta fidelidad ayuda a evitar que los errores se introduzcan en el código. Se debe cubrir todos las posibles rutas y esperar el estado final.\n\nResistencia: una prueba resistente es aquella que solo falla cuando hay un cambio de ruptura en el código. Se puede realizar refactorización y otros cambios sin que afecte a la prueba y sin necesidad de modificarla.\n\nPrecisión: cuando una prueba de alta precisión falla, se indica exactamente dónde está el fallo. Se maximiza la precisión manteniendo pruebas pequeñas y bien enfocadas. Para las pruebas de integración, hay que validar el estado en cada límite.\n\n# Prefer Testing Public APIs Over Implementation\n\nTodos los caminos se pueden probar a través de interface. Una API que puede pasar cualquier combinación posible a los métodos.\n\nProbar con frecuencia implementation-detail class lleva a dos fallos:\n\n1. El código es más difícil de mantener, ya que necesita actualizar las pruebas con mayor frecuencia.\n2. Si prueba un comportamiento solo a través de ella, puede resultar en falsa confianza en el código, ya que la ruta de acceso puede no funcionar de manera correcta cuando accede a través de la API pública.\n\n# Printer Friendly\n\n**CLARIDAD**: esto significa que el código sea legible como documentación, que describa el código que se está testeando.\n\n**COMPLETITUD**: Un test completo contiene toda la información necesaria para entenderlo, pero nada extra que pueda distraer.\n\n**RESISTENCIA**: Una vez escrito, un test resistente no necesita cambiar a no ser que el propósito/comportamiento de la clase que es testeada cambie\n\n# Descriptive Test Names\n\nNos permite comprender que se está testeando solo con leer el nombre, sin tener la necesidad de pasar por el cuerpo del método. También, dar nombres específicos te fuerza a dividir los tests sobre diferentes comportamientos.\n\n# Risk-Driven Testing\n\nHacer al principio del proyecto una brainstorm de los riesgos clave y de las mejores opciones para reducirlos nos ayudará a no malgastar esfuerzo y a adaptar el diseño.",
      "slug": "Test-in-the-Toilet",
      "date": "2019-04-30 00:34:18",
      "lang": "es",
      "tags": ["Testing", "Software Quality Metrics"],
      "path": "/Test-in-the-Toilet/index.html"
    },
    "lang": "es",
    "_nextI18Next": {
      "initialI18nStore": {
        "es": {
          "common": { "Next": "Siguiente" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Inicio",
            "Language": "Lenguaje",
            "Tags": "Tags",
            "en": "Inglés",
            "es": "Español",
            "zh": "Chino"
          },
          "post-layout": { "Author": "Autor: {{author}}" }
        },
        "en": {
          "common": { "Next": "Next" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}" }
        }
      },
      "initialLocale": "es",
      "ns": ["common", "feature-tags", "navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
