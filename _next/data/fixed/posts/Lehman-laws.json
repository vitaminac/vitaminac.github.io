{
  "pageProps": {
    "postData": {
      "slug": "Lehman-laws",
      "title": "Lehman Laws",
      "date": "2019-05-12 21:53:33",
      "lang": "en",
      "tags": [
        "Lehman laws",
        "Software Evolution",
        "Agile Software Development"
      ],
      "path": "/Lehman-laws/index.html",
      "markdownContentSource": "\nThe Lehman laws describe a balance between forces driving new developments on one hand, and forces that slow down progress on the other hand.\n\nLehman distinguishs between three categories of software:\n\n* A S-program (**specified**) is written according to an exact specification\n* A P-program (**procedural**) is written to implement certain procedures that completely determine what the program can do\n* An E-program (**evolving**) is written to perform some real-world activity, such a program needs to adapt to varying requirements and circumstances in that environment\n\nThe laws are said to apply only to the last category of systems\n\n## Continuing Change\n\nAn E-type system must be continually adapted or it becomes progressively less satisfactory.\n\n## Increasing Complexity\n\nAs an E-type system evolves, its complexity increases unless work is done to maintain or reduce it.\n\n## Self Regulation\n\nE-type system evolution processes are self-regulating with the distribution of product and process measures close to normal.\n\n## Conservation of Organisational Stability (invariant work rate)\n\nThe average effective global activity rate in an evolving E-type system is invariant over the product's lifetime.\n\n## Conservation of Familiarity\n\nAs an E-type system evolves, the average incremental growth remains invariant as the system evolves.\n\n## Continuing Growth \n\nThe functional content of an E-type system must be continually increased to maintain user satisfaction over its lifetime.\n\n## Declining Quality \n\nThe quality of an E-type system will appear to be declining unless it is rigorously maintained and adapted to operational environment changes.\n\n## Feedback System \n\nE-type evolution processes constitute multi-level, multi-loop, multi-agent feedback systems and must be treated as such to achieve significant improvement over any reasonable base."
    },
    "lang": "en",
    "_nextI18Next": {
      "initialI18nStore": {
        "en": {
          "common": { "Next": "Next" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}" }
        }
      },
      "initialLocale": "en",
      "ns": ["common", "feature-tags", "navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
