{
  "pageProps": {
    "postData": {
      "slug": "RaspberryPi4B-Setup",
      "title": "Raspberry Pi 4B Setup",
      "date": "2022-07-10 13:00:17",
      "lang": "en",
      "tags": ["Linux", "Debian", "Raspberry", "Raspberry Pi 4", "Prestashop"],
      "path": "/RaspberryPi4B-Setup/index.html",
      "markdownContentSource": "\n## Buy a Raspberry Pi 4B\n\nYou can buy the Raspberry Pi 4B board on Amazon, the recommended version is 4 GB. You may also need to buy a SD card, and optional case with fan.\n\n### Choose SD Card\n\nRaspberry Pi has no internal storage, relying instead on a removable micro SD card as his primary boot drives. [Raspberry Pi 3 doesn't support UHS mode because it requires 1.8v signaling while Raspberry Pi 3 is fixed at 3.3v](https://www.reddit.com/r/raspberry_pi/comments/4aoc3r/how_to_overclock_the_microsd_card_reader_on_a/d125ced/). This is technically the upper bound of write speed (25MB/sec) for [non-UHS SD cards](https://www.sdcard.org/developers/sd-standard-overview/speed-class/). Now Raspberry Pi 4B provides a [SD card socket runs on DDR50 bus speed mode](https://datasheets.raspberrypi.org/rpi4/raspberry-pi-4-datasheet.pdf) and a legacy [SDIO](https://www.sdcard.org/developers/sd-standard-overview/sdio-isdio/) interface is available on the GPIO pins.\n\n[![Raspberry Pi 4B](raspberry-pi-4B-block-diagram.png)](https://www.raspberrypi.org/forums/viewtopic.php?t=271632)\n\nThere is a micro-SD performance improvements with [Raspberry Pi 4](https://www.jeffgeerling.com/blog/2019/raspberry-pi-microsd-card-performance-comparison-2019). Raspberry Pi 4 still doesn't provide good support for [A2](https://www.sdcard.org/developers/sd-standard-overview/application-performance-class/) SD card, because A2 cards rely on specialized hardware in the host device to work well. The [benchmark](https://www.pidramble.com/wiki/benchmarks/microsd-cards#4-model-b) showed that A1 is the best card to use with Rapsberry Pi 4B and got better result than A2.\n\n### [Overclock SD Card](https://www.jeffgeerling.com/blog/2016/how-overclock-microsd-card-reader-on-raspberry-pi-3)\n\nDDR50 requires 1.8V signaling, supports frequency up to 50 MHz, sampled on both clock edges and bus speed up to 50 MB/sec per [Physical Layer Simplified Specification](https://www.sdcard.org/downloads/pls/). However, [UHS-I](https://www.sdcard.org/developers/sd-standard-overview/bus-speed-default-speed-high-speed-uhs-sd-express/) SD card [supports a clock frequency of 50 MHz (DDR50), 100 MHz (SDR50) and 208MHz (SDR104)](https://en.wikipedia.org/wiki/SD_card#UHS-I) per [Physical Layer Simplified Specification](https://www.sdcard.org/downloads/pls/). So in theory we can overclock SD card frequency to a higher value, e.g. 100 MHz. However, overclocking [only works for Raspberry Pi 3](https://www.raspberrypi.org/forums/viewtopic.php?t=266682#p1620747).\n\n### [SD Card Speed Test](https://www.raspberrypi.org/blog/sd-card-speed-test/)\n\nInstall the tool to test your SD card speed\n\n    sudo apt update\n    sudo apt install agnostics\n\nmy SanDisk Ultra A1 128 GB SD card has the following result\n\n    Sequential write speed 25460 KB/sec\n    Random write speed 1077 IOPS\n    Random read speed 2642 IOPS\n\n## Download Raspberry Pi OS image\n\nDownload **Raspberry Pi OS Lite** or **Raspberry Pi OS with desktop** from [Raspberry Pi official operating system images](https://www.raspberrypi.com/software/operating-systems/#raspberry-pi-os-64-bit).\n\n## Burn the image to SD card\n\nDownload [Rufus](https://rufus.ie/) and unzip the image file you downloaded previously, you will see a single **.img** file. Select SD card as device and select **.img** file as **Disk or ISO image** and then click **Start**. You may need **SD Card Reader USB adapter** if your computer doesn't have SD card slot.\n\n## CLI Enviroment Configuration\n\n### Boot Raspberry Pi OS Lite\n\nPlug the SD card to your Raspberry Pi and power on the device, follow the instructions to complete the basic setting. You will see the TTY when the boot process finish.\n\n### Switch to TTY\n\nYou can press Ctrl + Alt + F1/F2/F3/F4/F5/F6/F8/F10/F11/F12 to switch to different TTY console and press Ctrl + Alt + F7 you can switch to desktop environment if you have it installed.\n\n### [Set Language](https://www.raspberrypi.com/documentation/computers/configuration.html#localising-your-raspberry-pi)\n\nExecute `sudo raspi-config` and then select Localization Options > Locale. This option will execute following [commands](https://github.com/RPi-Distro/raspi-config/blob/2be7313596b228c349c829ca7258cbdbd4b5deb1/raspi-config#L532).\n\n### [Set Keyboard Layout](https://wiki.debian.org/Keyboard)\n\nExecute `sudo raspi-config` and then select Localization Options > Keyboard. This option will execute following [commands](https://github.com/RPi-Distro/raspi-config/blob/2be7313596b228c349c829ca7258cbdbd4b5deb1/raspi-config#L518).\n\nFor standard US layout you can select `Generic 105-key PC (intl.)` and then select `English US` and `default layout`. We need to `sudo reboot` to take effect.\n\n### [Rotate the TTY Screen](https://github.com/pimoroni/hyperpixel4/issues/39#issuecomment-717248457)\n\nIn order to rotate the screen in TTY mode you can use following command\n\n    echo <rotation> | sudo tee -a /sys/class/graphics/fbcon/rotate > /dev/null\n\nTo always rotate the screen at startup you can add following parameter to `/boot/cmdline.txt`\n\n    fbcon=rotate:<rotation>\n\nThe `<rotation>` can be 0, 1, 2, 3 that correspond to 0-degree, 90-degree, 180-degree, 270-degree clockwise rotation.\n\n### [Connect to Wi-Fi](https://www.raspberrypi.com/documentation/computers/configuration.html#wireless-networking-command-line)\n\n#### Configure Wi-Fi country code\n\nIn the Raspberry Pi OS, [5 GHz wireless networking is disabled until a Wi-Fi country code has been configured by the user](https://www.raspberrypi.org/documentation/computers/configuration.html#ensure-wireless-operation).\n\nExecute `sudo raspi-config` and then select Localization Options > WLAN Country. This option will execute following [commands](https://github.com/RPi-Distro/raspi-config/blob/2be7313596b228c349c829ca7258cbdbd4b5deb1/raspi-config#L615-L630).\n\n#### [Find SSID](https://www.raspberrypi.com/documentation/computers/configuration.html#getting-wireless-lan-network-details)\n\nIf you don't know the SSID scan the networks in the area to find the SSID you want to connect to\n\n    sudo iwlist wlan0 scan | greo -i ssid\n\n#### Enter Wi-Fi Credentials Interactively\n\nExecute `sudo raspi-config` and then select System Options > Wireless LAN. This option will execute following [commands](https://github.com/RPi-Distro/raspi-config/blob/2be7313596b228c349c829ca7258cbdbd4b5deb1/raspi-config#L2308).\n\n#### [Enter Wi-Fi Credentials Manually](https://www.raspberrypi.com/documentation/computers/configuration.html#adding-the-network-details-to-your-raspberry-pi)\n\nCreate configuration for Wi-Fi\n\n    wpa_passphrase <ssid> <password> | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf\n\nIf you are connecting to a hidden network, an extra option `scan_ssid` in the `wpa_supplicant.conf` file `network` section need to be present. You should use tab instead of space when indenting. By default, `wpa_passphrase` also include the plain text version of your password, but commented out. You should delete this line for extra security. The final network section should look like\n\n    network={\n        ssid=\"<your hidden SSID>\"\n        scan_ssid=1\n        psk=\"<your encrypted 32 byte hexadecimal PSK>\"\n    }\n\nand ensure the following lines are at the top of `wpa_supplicant` file, you need to double check the country is correct.\n\n    ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n    update_config=1\n    country=<2 letter ISO 3166-1 country code>\n\nthen reconfigure the interface with\n\n    wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant.conf -i wlan0 -d\n\n#### Verify the network\n\nYou can verify the connection by running following command\n\n    ping 8.8.8.8\n\nIf you find the network is unavailable, try to wait 2 minutes or reboot, them verify with `ping` again.\n\n## [Configure Static IP Address](https://www.raspberrypi.com/documentation/computers/configuration.html#static-ip-addresses)\n\nIf you want a static IP address, so each time you restart your Raspberry Pi device or disconnect and reconnect to the network you can find your device with same IP address. You need to add the following lines to `/etc/dhcpcd.conf`.\n\n    interface <your-interface-name>\n    static ip_address=192.168.0.10/24\n    static routers=192.168.0.1\n    static domain_name_servers=192.168.0.1 8.8.8.8\n\nYou can find your interface name with `ip link`, router IP address with `ip route show default`. You need to ensure the static IP address is outside of DHCP dynamically assigned IP address range, you can verify this information in your router. You can verify your IP address with `ip -a address`.\n\n## [Setting up SSH Server](https://www.raspberrypi.com/documentation/computers/remote-access.html#ssh)\n\n### [Enable SSH Server](https://www.raspberrypi.com/documentation/computers/remote-access.html#enabling-the-server)\n\nEnter `sudo raspi-config` in a terminal window. Select `Interfacing Options` and then `SSH`. This option will execute following [commands](https://github.com/RPi-Distro/raspi-config/blob/2be7313596b228c349c829ca7258cbdbd4b5deb1/raspi-config#L841)\n\n### [Configure Passwordless SSH Access](https://www.raspberrypi.com/documentation/computers/remote-access.html#passwordless-ssh-access)\n\nGenerate new SSH keys using the `ssh-keygen` command on the client. Copy your public key to your Raspberry Pi. `cat ~/.ssh/id_rsa.pub | ssh <USERNAME>@<IP-ADDRESS> 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'`.\n\n### [Disable Password Authentication](https://www.raspberrypi.com/documentation/computers/configuration.html#using-key-based-authentication)\n\nEdit `/etc/ssh/sshd_config` and change these options to `no`\n\n    ChallengeResponseAuthentication no\n    PasswordAuthentication no\n    UsePAM no\n\n### Change SSH Server Port\n\nBy default, SSH server listen to `22`. Edit `/etc/ssh/sshd_config` and change `Port` to other value e.g. `2222`\n\n### Disable IPv6 SSH Access\n\nEdit `/etc/ssh/sshd_config` and change `AddressFamily` to `inet` which means IPv4 only.\n\n### Listen To Local Network Only\n\nEdit `/etc/ssh/sshd_config` and change `ListenAddress` to private network static address that you have configured before. When you specify IP address explicitly in sshd config file, [network interfaces must be prepared prior to sshd start](https://unix.stackexchange.com/a/499712). Execute `sudo systemctl edit sshd` and add following content.\n\n    [Unit]\n    After=network-pre.target network.target network-online.target auditd.service dhcpcd.service\n\n    [Service]\n    Restart=on-failure\n    RestartSec=5\n    RestartPreventExitStatus=\n\nThen execute `sudo systemctl enable systemd-networkd-wait-online`.\n\n### Apply Latest SSH Configuration\n\nRestart the ssh system with `sudo service ssh reload`.\n\n## [Firewall Configuration](https://www.raspberrypi.com/documentation/computers/configuration.html#install-a-firewall)\n\n    sudo apt install ufw\n    sudo ufw default deny incoming\n    sudo ufw default allow outgoing\n    sudo ufw allow in on eth0 from 192.168.0.0/24 to 192.168.0.10 port 2222 proto tcp\n    sudo ufw enable\n    sudo ufw status numbered verbose\n\n## Disable Wi-Fi & Bluetooth\n\nAdd these 2 lines to `/boot/config.txt`\n\n    dtoverlay=disable-wifi\n    dtoverlay=disable-bt\n\nHere you can find the documentations of [`disable-wifi`](https://github.com/raspberrypi/firmware/blob/afc7631bc9a58f94a157503955881ab27a6287d0/boot/overlays/README#L736-L739) and [`disable-bt`](https://github.com/raspberrypi/firmware/blob/afc7631bc9a58f94a157503955881ab27a6287d0/boot/overlays/README#L727-L733).\n\n## Configure Fan\n\nWhen you buy a Raspberry Pi 4B you can also optionally buy a case with fan e.g. the official [Raspberry Pi 4 Case Fan](https://www.raspberrypi.org/products/raspberry-pi-4-case-fan/). You can simply connect the fan wires to 5V and ground pin but Raspberry Pi support advance fan control base on temperature. Run `sudo raspi-config`, select `Performance Options` then select `Fan`, introduce the GPIO that will be enabled when temperature exceeds the limit you introduced. You need to reboot after the configuration change. Run the command [`pinout`](https://www.raspberrypi.org/documentation/computers/os.html#gpio-pinout) to find the location of GPIO and connect it to base gate of a transistor, connect negative wire of fan to ground. If you are using NPN transistor then connect emitter gate to positive wire of fan and 5V to collector gate of transistor. If you are using PNP transistor then connect collector gate to positive wire of fan and 5V to emitter gate of transistor. You can use protoboard to arrange the wires. You can verify current temperature using command `vcgencmd measure_temp`.\n\n## [NAS with Samba and External Disk through USB 3.0](https://www.raspberrypi.com/documentation/computers/remote-access.html#samba-smbcifs)\n\n### Mount External Disk\n\nAttach the external disk to the USB 3.0 port and run following to ensure the device is recognized\n\n    sudo blkid\n    sudo fdisk -l\n\nIf your disk is `NTFS` file system then we need to install following package\n\n    sudo apt install ntfs-3g\n\nOnce you know where the drive is located, run following command, the type argument might be different depending on your drive file system\n\n    sudo mkdir -p /mnt/shared\n    sudo mount -t ntfs-3g /dev/<what you have found in previous step e.g. sda1> /mnt/shared\n\nTo permanently mount at startup, add the following line to `/etc/fstab`\n\n    /dev/<what you have found in previous step e.g. sda1>    /mnt/shared   ntfs    default  0  0\n\n### Setup Shared Folder on Raspberry\n\nInstalling Samba Support with following commands\n\n    sudo apt update\n    sudo apt install samba samba-common-bin cifs-utils\n\nSharing a folder is easy\n\n    sudo useradd -M -s /sbin/nologin samba\n    sudo passwd samba\n    sudo chmod 700 /mnt/shared\n    sudo chown samba /mnt/shared\n    sudo smbpasswd -a samba\n\nEdit the Samba configuration file `/etc/samba/smb.conf` and add the following lines\n\n    [shared]\n        path = /mnt/shared\n        read only = no\n        guest ok = no\n        security = user\n        valid users = samba\n        writable = yes\n        vfs objects = recycle\n        recycle:repository = .recycle/%U\n        recycle:touch = yes\n        recycle:keeptree = yes\n        recycle:versions = yes\n\nIn the same file change these two properties to\n\n    interfaces = 192.168.0.10/24 eth0\n    workgroup = <your workgroup name here - you find it in Windows client machine System Properties - Computer Name>\n\nApply the change\n\n    sudo service smbd reload\n\nAllow the Samba traffic through firewall\n\n    sudo ufw allow in on eth0 from 192.168.0.0/24 to 192.168.0.10 app Samba\n\n### Mount Samba Shared Folder\n\n    net use Z: \\\\192.168.0.10\\shared /SAVECRED /PERSISTENT:YES\n\nIt will ask for username and password, you should introduce `samba` as username.\n\n### Remove Samba Shared Folder\n\n    net use  Z: /delete\n\n## [NAS Backup with Dropbox and Rclone](https://rclone.org/dropbox/)\n\n### [Get your own Dropbox App ID](https://rclone.org/dropbox/#get-your-own-dropbox-app-id)\n\n### Install Rclone\n\n    sudo apt update\n    sudo apt install rclone\n\n### Configure Rclone\n\n    rclone config\n\nFollow the instructions until you need to visit an URL, you will need to use SSH local forward\n\n    sudo ufw default allow FORWARD\n    sudo service ufw restart\n    ssh -p 2222 -N -L 127.0.0.1:53682:127.0.0.1:53682 sgao@192.168.0.10\n\nOpen the link that is mentioned in following [workaround](https://github.com/rclone/rclone/issues/4792#issuecomment-731758924) to avoid expiration issue. You can verify that refresh token is present\n\n    cat ~/.config/rclone/rclone.conf\n\nRollback the `ufw` configuration\n\n    sudo ufw default deny FORWARD\n    sudo service ufw restart\n\n### [Backup with Dropbox](https://rclone.org/commands/rclone_sync/)\n\nWe first verify the setup is correct\n\n    rclone lsd dropbox:\n\nThen sync from Dropbox to a local folder\n\n    mkdir -p /mnt/shared/Dropbox\n    rclone copy dropbox: /mnt/shared/Dropbox\n\nFinally, keep the folder synchronized with Dropbox\n\n    rclone sync /mnt/shared/Dropbox dropbox:\n\n### Keep Dropbox Synced With Local\n\nInstall the `inotify-tools`\n\n    sudo apt update\n    sudo apt install inotify-tools\n\nSave following commands to `~/dropbox-sync-from-local-to-remote.sh`\n\n    #!/bin/bash\n    # Execute first time after the machine is boot\n    rclone sync /mnt/shared/Dropbox dropbox:\n    inotifywait -m -q -r -e create -e modify -e move -e delete --format '%w%f:%e' /mnt/shared/Dropbox | \\\n    while read; do \\\n        path=$(echo $REPLY | cut -d \":\" -f 1); \\\n        event=$(echo $REPLY | cut -d \":\" -f 2); \\\n        echo \"$path was changed because of event $event\"; \\\n        echo \"Skipping $(timeout 3 cat | wc -l) further changes\"; \\\n        rclone sync --delete-during /mnt/shared/Dropbox dropbox:; \\\n    done\n\nWe need to add execute permission to the script file\n\n    chmod +x ~/dropbox-sync-from-local-to-remote.sh\n\nCreate a `Cron` job at boot time by executing `crontab -e` and then add following line to the task list\n\n    @reboot sleep 10 && ~/dropbox-sync-from-local-to-remote.sh >> ~/dropbox-sync-from-local-to-remote.log 2>&1\n\n### Keep Local Synced With Dropbox\n\nSave following commands to `~/dropbox-sync-from-remote-to-local.sh`\n\n    rclone sync dropbox: /mnt/shared/Dropbox --backup-dir /mnt/shared/Dropbox-Backup --suffix .$(date +\"%Y-%m-%d-%H-%M-%S\")\n\nCreate a `Cron` job by executing `crontab -e` and then add following line to the task list\n\n    */5 * * * * ~/dropbox-sync-from-remote-to-local.sh >> ~/dropbox-sync-from-remote-to-local.log 2>&1\n\n## [Upgrade Raspberry Pi OS](https://www.raspberrypi.org/documentation/computers/os.html#upgrading-from-operating-system-versions)\n\nModify the file `/etc/apt/sources.list` and `/etc/apt/sources.list.d/raspi.list` and replace every occurrence of the word `buster` to `bullseye`.\n\n    sudo apt update\n    sudo apt -y dist-upgrade\n    sudo reboot\n\n### Remove Unused Software After Upgrade\n\n    sudo apt purge geany thonny\n    sudo apt autoremove\n\n## Desktop Environment Configuration\n\nRaspberry Pi OS provides desktop environment, and we can also upgrade from lite version to desktop version, but it is recommended that if you need to use desktop environment, download the desktop version directly.\n\n### [Install Desktop Environment from Lite Version](https://gist.github.com/kmpm/8e535a12a45a32f6d36cf26c7c6cef51)\n\n    sudo apt install -y lightdm raspberrypi-ui-mods rpi-chromium-mods\n    sudo apt install -y arandr # https://www.raspberrypi.org/forums/viewtopic.php?t=265472#p1613632\n    sudo apt install --no-install-recommends xinit\n\nAfter the installation you can enter the desktop environment using `startx` from TTY console.\n\n### Boot Raspberry Pi OS with desktop\n\nIf you boot with a desktop image, you will see a GUI windows that guide you through the initial setup, e.g. configuring the country, language, keyboard, Wi-Fi.\n\n### [Configure Display Setting](https://www.raspberrypi.org/documentation/computers/configuration.html#hdmi-configuration)\n\nEdit `/boot/config.txt` and ensure following parameters has the following values:\n\n    hdmi_drive=2 # https://www.raspberrypi.org/documentation/computers/configuration.html#troubleshooting-your-hdmi-2\n    hdmi_group=2 # https://www.raspberrypi.org/documentation/computers/config_txt.html#hdmi_group\n    hdmi_mode=82 # https://www.raspberrypi.org/documentation/computers/config_txt.html#hdmi_mode\n\n### [Rotate your Display in GUI](https://www.raspberrypi.org/documentation/computers/configuration.html#rotating-your-display)\n\nYou can check you available display with:\n\n    xrandr -q\n\nThen use the name of display you get previously to rotate the screen\n\n    xrandr --output [name of display e.g. HDMI-1] --rotate left\n\n## Reference\n\n* [raspi-config](https://github.com/RPi-Distro/raspi-config/blob/master/raspi-config)\n* [Samba Wiki: Setting up Samba as a Standalone Server](https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Standalone_Server)\n* [How can I have a Trash/Recycle Bin for my Samba shares?](https://unix.stackexchange.com/a/112066)\n* [Command-Line Reference: Net use](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/gg651155(v=ws.11))\n* [Enabling Recycle Bin like functionality in Samba](https://lonewolfonline.net/enabling-recycle-bin-functionality-samba/)\n* [Samba VFS recycle bin](https://www.samba.org/samba/docs/current/man-html/vfs_recycle.8.html)\n* [Rclone: Simple two-way dropbox sync](https://www.ralphminderhoud.com/blog/rclone-two-way-dropbox-sync/)\n"
    },
    "lang": "en",
    "_nextI18Next": {
      "initialI18nStore": {
        "en": {
          "common": { "Next": "Next" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}" }
        }
      },
      "initialLocale": "en",
      "ns": ["common", "feature-tags", "navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
