{
  "pageProps": {
    "postData": {
      "slug": "Virtualization",
      "title": "Virtualización, Contenedores y Cloud Computing",
      "date": "2019-02-26 23:19:07",
      "lang": "es",
      "tags": [
        "Virtualización",
        "DevOps",
        "Contenedor",
        "Cloud Computing",
        "Docker",
        "Vagrant"
      ],
      "path": "/Virtualization/index.html",
      "markdownContentSource": "\n# Introducción\n\nLa virtualización es una técnica que permite la emulación de algún recurso tecnológico.\n\n# Máquina virtual\n\nVirtualización de un entorno de ejecución para la ejecución de aplicaciones.\n\n# Virtualización del hardware\n\nVirtualización de un hardware completo en el que se puede ejecutar un sistema operativo como si ejecutara sobre HW real.\n\n# Sistemas virtualizados\n\nDistinguimos dos sitema operativo\n\n* **HOST**: es el sistema operativo que se arranca en el HW físico.\n* **GUEST**: es el sistema operativo que se ejecuta sobre el HW virtualizado\n\n![Máquina virtual](virual_machie.png)\n\nLa virtualización se permite gracias al hypervisor, también llamado gestor de máquinas virtuales, virtual machine manager (VMM).\n\nUn hypervisor es un software que permite la ejecución de múltiples sistemas operativos guest sobre el sistema operativo host.\n\nVentajas:\n\n* Ejecución de un sistema operativo diferente al instalado\n* Posibilidad de clonar y mover la máquina virtual de un ordenador físico a otro\n\nInconvenientes: penalización en rendimiento\n\n# Gestión de sistemas virtualizados\n\n* Pausarse\n* Reanudarse\n* Crearse \"instantáneas\"\n\n# Desarrollo\n\nConfiguramos una máquina virtual equivalente a la que se usará en producción que nos permite compartir entorno entre desarrolladores y un mismo desarrollador puede tener accesible diferentes entornos para diferentes proyectos. Podemos crear instantánea que vuelve a un punto anterior.\n\n# Computación en la nube\n\nLa prestación de servicios en los preveedores de alojamient en Internet, que son empresas de alojamiento que alquilan recursos de computación. Nos permite la elasticidad de los recursos, el uso de recursos es dinámico, si necesita más recursos hardware, podemos adquirir, se suele cobrar por tiempo de uso de los recursos.\n\n## Infraestructura como servicio (laaS)\n\n* Servidores (instances)\n* Balanceadores de carga (load balancer)\n* Gestión de imágenes (images)\n* Copias se seguridad de servidores\n* Almacenamiento de datos\n* Direcciones IP\n* Servidores DNS\n\n## Plataforma como servicio (PaaS)\n\n* La plataforma está diseñada para ser escalable de forma automática (sin intervención del desarrollador/administrador)\n* Dependiendo del proveedor existen plataformas para las tecnologías mas usadas: Java, PHP, Ruby, .NET..\n* La plataforma ofrece servicios adicionales como un servicio: Bases de datos, servidor de correo, bus de comunicaciones, etc…\n\n## Software como Servicio (SaaS)\n\n* El usuario no instala el software, lo usa vía web\n* Generalmente se paga por uso o por número de usuarios\n\n## Nube privada\n\nExisten diferentes tecnologías que lo permiten instalar nubes privadas para controlar un data center.\n\nOfrecen APIs REST compatibles con los proveedores\n\n## Contenedores\n\nLos contenedores son una tecnología que ofrece unas ventajas similares a las VMs pero aprovechando mejor los recursos. Para ejecutar un contenedor no se necesita hypervisor, El contenedor es ejecutado directamente por el kernel del host como si fuera una app más pero de forma aislada del resto\n\n![Principales diferencias](difference-vm-container.png)\n\n![Formato de distribución y ejecución de servicios](distribution_execution.png)\n\n### Relación con Mircroservicios\n\nLas aplicaciones monolíticas son cada vez más grandes, más complejas y soportan más carga, y ahora están dando paso a microservicios, más elásticas y manejables. Cada equipo de desarrollo implementa y opera un\nmicroservicio independiente y reutilizable. Los contenedores están acelerando la adopción porque cada microservicio se ejecuta como uno o varios contenedores. La organización de contenedores y servidores físicos tratan como una única app\n\n# Vagrant\n\nVagrant es una herramienta pensada para desarrolladores que quieren configurar y compartir el entorno de trabajo (desarrollo) o despliegue de su aplicación\n\n# Docker\n\nDocker es una tecnología que ofrece la containerization."
    },
    "lang": "es",
    "_nextI18Next": {
      "initialI18nStore": {
        "es": {
          "common": { "Next": "Siguiente" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Inicio",
            "Language": "Lenguaje",
            "Tags": "Tags",
            "en": "Inglés",
            "es": "Español",
            "zh": "Chino"
          },
          "post-layout": { "Author": "Autor: {{author}}" }
        },
        "en": {
          "common": { "Next": "Next" },
          "feature-tags": { "Tags": "Tags" },
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}" }
        }
      },
      "initialLocale": "es",
      "ns": ["common", "feature-tags", "navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
