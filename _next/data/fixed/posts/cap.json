{
  "pageProps": {
    "postData": {
      "slug": "cap",
      "tags": ["CAP", "Database", "BASE", "ACID"],
      "isDraft": false,
      "isArchived": false,
      "title": "CAP Theorem",
      "date": "2021-06-07 13:57:06",
      "isLegacy": false,
      "lang": "en",
      "tocHtml": "<ol>\n<li><a href=\"#Reference\">Reference</a></li>\n</ol>",
      "articleHtml": "<p>The <strong>CAP theorem</strong>, also named as Brewer&#x27;s theorem states that it is impossible for a distributed data store to simultaneously provide more than two out of the following three guarantees:</p>\n<ul>\n<li>Consistency: Every read receives the most recent write or an error</li>\n<li>Availability: Every request receives a non-error response, without the guarantee that it contains the most recent write</li>\n<li>Partition tolerante: The system continues to operate despite an arbitrary number of messages being dropped.</li>\n</ul>\n<table><thead><tr><th>System Type</th><th>Guarantees Provided</th><th>Description</th></tr></thead><tbody><tr><td><strong>CA System</strong></td><td>Consistency + Availability</td><td>A single-machine database has no partition issues, so it can guarantee both consistency and availability.</td></tr><tr><td><strong>CP System</strong></td><td>Consistency + Partition Tolerance</td><td>When a network partition occurs, the system sacrifices availability (rejecting some requests) to maintain consistency.</td></tr><tr><td><strong>AP System</strong></td><td>Availability + Partition Tolerance</td><td>When a network partition occurs, the system continues to provide services, but data may be temporarily inconsistent (eventual consistency).</td></tr></tbody></table>\n<p>In practical system design, since distributed systems must have partition tolerance (P), developers usually have to make trade-offs between consistency (C) and availability (A). This has led to the BASE theory (Basically Available, Soft state, Eventually consistent), which emphasizes eventual consistency rather than strong consistency. So, BASE mitigate CAP by choosing a practical balance of &quot;Be available now, consistent later.‚Äù</p>\n<h2 id=\"Reference\">Reference<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#Reference\"><i class=\"fa-solid fa-link\"></i></a></h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/CAP_theorem\" rel=\"nofollow\" target=\"_blank\">CAP Theorem</a></li>\n</ul>"
    },
    "lang": "en",
    "_nextI18Next": {
      "initialI18nStore": {
        "en": {
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}", "Tags": "Tags" }
        }
      },
      "initialLocale": "en",
      "ns": ["navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
