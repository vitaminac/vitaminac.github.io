{
  "pageProps": {
    "postData": {
      "title": "Testing TDD BDD y ATDD",
      "markdownContentSource": "\n# Común problema de desarrollo software\n\n* Alejamiento entre usuario y desarrollo\n  * incumplimiento de requisitos del usuario\n  * la funcionalidad del software final no es lo que quiere usuario\n  * diferencia entre uso del lenguaje\n* Alejamiento entre testing y desarrollo\n  * Separación entre testing y desarrollo\n  * ciclo de desarrollo es demasiado largo\n  * bajo porcentaje de automatización\n\n# Solución\n\n* Testing throughout the Software Life Cycle: prueba unitaria, prueba de integración, prueba de sistema\n* Testing automátizada\n* Integración continua\n  * Check-in continua\n  * Build continua\n  * Deploy continua\n  * Test continua\n    * Testing para cada check-in\n    * Una prubea de integración por día\n    * Una prueba de sistema por día\n\n# Test Driven Development\n\nUna práctica de desarrollo software que se basa en escribir las pruebas primero y luego refactorizar. En primer lugar, se escribe una prueba y se verifica que las pruebas fallan. A continuación, se implementa el código que hace que la prueba pase satisfactoriamente. Una vez pase la prueba unitaria refactorizamos y volvemos a repetir el ciclo.\n\n1. Elegir un requisito\n2. Escribir una prueba\n3. Verificar que la prueba falla\n4. Escribir la implementación\n5. Ejecutar las pruebas automatizadas\n6. Eliminación de duplicación\n7. Actualización de la lista de requisitos\n\n# Behauvior Driven Development\n\n(**Behavior-Driven Development** - BDD) deriva de TDD, y combina los principios de [domain-driven design](https://en.m.wikipedia.org/wiki/Domain-driven_design) con ideas del uso de un lenguaje común ([**domain-specific language**](https://en.m.wikipedia.org/wiki/Domain-specific_language) - DSL) para elaborar el testing. Utiliza sintaxis como Given， When, Then para expresar el comportamiento y salida esperada. Las pruebas se escriben usando historia de usuario, el que ya esta escrito en un documento dedicado. Un problema común de TDD es el test depende de la implementation la función. En BDD afrontamos este problema en testear el comportamiento de la función sin tener en cuenta la detalle de su implementación.\n\n## Especificaciones del comportamiento\n\nEl comportamiento deseado deber ser especificado por el DSL(Domain-Specific-Language) por ejmplo Gherkin, que usa 5 sentencias\n\n**Fuature**: Un título claro y explícito de la historia\n  Una pequeña sección de introducción que especifique\n\n* quién\n* qué efecto se quiere\n* qué beneficia la parte interesada a partir de este efecto\n\n**Criterios de aceptación o escenarios**\n**Scenario:** Una descripción de un ejemplo específico de la feature\n\n* Comienza a especificar la condición inicial con la sentencia **Given:Precondición**, puede consistir en una causa o varias\n* Después declara cuál evento causa el inicio del escenario **When:Condición**\n* Finalmente, declara el resultado esperado, en una o más cláusulas **Then:Postcondición**\n\n# Acceptance Test Driven Development\n\nEs una práctica en la que todo el equipo analiza y determina de forma colaborativa los criterios ejemplificativos de aceptación, y son divididos en un conjunto de pruebas antes de comenzar el desarrollo.\n\n# Diferencia\n\n|    Diferencia    |                  ATDD                  |              TDD            |        BDD        |\n|:----------------:|:--------------------------------------:|:---------------------------:|:-----------------:|\n|**Colaboradores**|Cliente|Desarrollador y Tester|ATDD + TDD|\n|**Objetivo**|Participa los usuarios en la fase de diseño|Una practica de desarrollo|Unit tester y negocio con un lenguaje común|\n|**Documento**|Criterio de aceptación ejemplificativos|Documento de requisito|documento escrito en lenguaje Gherkin|\n|**Automatización**|No es necesario|necesario|necesario|\n|**Testing**|Cada historia de usuario|Cada funcionalidad|Cada historia de usuario|\n",
      "slug": "TDD-BDD-ATDD",
      "date": "2019-04-27 12:55:45",
      "lang": "es",
      "tags": [
        "Testing",
        "Agile Software Development",
        "BDD",
        "Behauvior Driven Development",
        "ATDD",
        "Acceptance Test Driven Development",
        "TDD",
        "Test Driven Development",
        "Integración continua",
        "IC",
        "Continuous Integration",
        "CI",
        "Domain-Driven Design"
      ],
      "path": "/TDD-BDD-ATDD/index.html"
    },
    "lang": "es",
    "_nextI18Next": {
      "initialI18nStore": {
        "es": {
          "navbar": {
            "Home": "Inicio",
            "Language": "Lenguaje",
            "Tags": "Tags",
            "en": "Inglés",
            "es": "Español",
            "zh": "Chino"
          },
          "post-layout": { "Author": "Autor: {{author}}", "Tags": "Tags" }
        },
        "en": {
          "navbar": {
            "Home": "Home",
            "Language": "Language",
            "Tags": "Tags",
            "en": "English",
            "es": "Spanish",
            "zh": "Chinese"
          },
          "post-layout": { "Author": "Author: {{author}}", "Tags": "Tags" }
        }
      },
      "initialLocale": "es",
      "ns": ["navbar", "post-layout"],
      "userConfig": {
        "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] },
        "default": {
          "i18n": { "defaultLocale": "en", "locales": ["en", "es", "zh"] }
        }
      }
    }
  },
  "__N_SSG": true
}
