{"pageProps":{"lang":"en","allPostsData":[{"slug":"test-youtube","title":"Test Youtube","date":"2020-01-02","lang":"en","content":"\r\n::youtube[CS329P]{vid=rvy3EggGH7w}\r\n"},{"slug":"test-math","title":"Test Math","date":"2020-01-02","lang":"en","content":"\r\n$$\r\nL = \\frac{1}{2} \\rho v^2 S C_L\r\n$$\r\n"},{"slug":"test-img","title":"Test Image","date":"2020-01-02","lang":"en","content":"\r\n![Image](test.jpg)\r\n"},{"slug":"test-gfm","title":"Test GFM","date":"2020-01-02","lang":"en","content":"\r\n- [ ] foo\r\n- [x] bar\r\n"},{"slug":"test-emoji","title":"Test Emoji","date":"2020-01-02","lang":"en","content":"\r\nEmojis in this text will be replaced: :dog: :+1:\r\n"},{"slug":"test-code","title":"Test Code","date":"2020-01-02","lang":"en","content":"\r\n```c\r\n    #include <stdio.h>\r\n    \r\n    int main(int argc, char *argv[])\r\n    {\r\n        printf(\"argc = %d\\n\", argc);\r\n        for(int ndx = 0; ndx != argc; ++ndx)\r\n            printf(\"argv[%d] --> %s\\n\", ndx, argv[ndx]);\r\n        printf(\"argv[argc] = %p\\n\", (void*)argv[argc]);\r\n    }\r\n```\r\n"},{"slug":"test-markdown","title":"Test Markdown","date":"2020-01-01","lang":"en","content":"\r\nNext.js has two forms of pre-rendering: **Static Generation** and **Server-side Rendering**. The difference is in **when** it generates the HTML for a page.\r\n\r\n* **Static Generation** is the pre-rendering method that generates the HTML at **build time**. The pre-rendered HTML is then _reused_ on each request.\r\n* **Server-side Rendering** is the pre-rendering method that generates the HTML on **each request**.\r\n\r\nImportantly, Next.js lets you **choose** which pre-rendering form to use for each page. You can create a \"hybrid\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.\r\n\r\nWe recommend using **Static Generation** (with and without data) whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request.\r\n\r\nYou can use Static Generation for many types of pages, including:\r\n\r\n- Marketing pages\r\n- Blog posts\r\n- E-commerce product listings\r\n- Help and documentation\r\n\r\nYou should ask yourself: \"Can I pre-render this page **ahead** of a user's request?\" If the answer is yes, then you should choose Static Generation.\r\n\r\nOn the other hand, Static Generation is **not** a good idea if you cannot pre-render a page ahead of a user's request. Maybe your page shows frequently updated data, and the page content changes on every request.\r\n\r\nIn that case, you can use **Server-Side Rendering**. It will be slower, but the pre-rendered page will always be up-to-date. Or you can skip pre-rendering and use client-side JavaScript to populate data.\r\n"},{"slug":"test-auto-link","title":"Test AutoLink","date":"2020-01-01","lang":"en","content":"\r\n# Heading 1\r\n\r\n## Heading 2\r\n\r\n### Heading 3\r\n\r\nparagraph\r\n"}],"metadata":{"siteAuthor":"Gao","siteTitle":"Gao's blog","siteDescription":"Gao's blog","defaultLanguage":"en"},"_nextI18Next":{"initialI18nStore":{"en":{"common":{"Next":"Next","Back to home":"Back to home"}}},"initialLocale":"en","userConfig":{"i18n":{"defaultLocale":"en","locales":["en","es"]},"default":{"i18n":{"defaultLocale":"en","locales":["en","es"]}}}}},"__N_SSG":true}